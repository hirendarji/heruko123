{"version":3,"sources":["logo.svg","component/Adduser.jsx","App.js","reportWebVitals.js","index.js"],"names":["Adduser","useForm","register","handleSubmit","errors","useState","match","setMatch","error","change","className","style","color","id","onSubmit","e","console","log","axios","post","then","res","catch","err","document","getElementById","reset","name","ref","required","placeholder","type","email","onChange","target","value","defaultValue","display","username","password","confirm_password","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qNAAe,I,oDCuGAA,EAhGD,WACd,MAG+CC,cAAnCC,EAHZ,EAGYA,SAAUC,EAHtB,EAGsBA,aAAcC,EAHpC,EAGoCA,OAHpC,EAI0BC,mBAAS,IAJnC,mBAIUC,EAJV,KAIgBC,EAJhB,OAK0BF,oBAAS,GALnC,mBAKUG,EALV,aAMsBH,oBAAS,IAN/B,6BASI,SAASI,KAuCT,OACI,mCACA,qBAAKC,UAAU,UAAf,SACP,sBAAKA,UAAU,YAAf,UACC,oBAAIA,UAAU,YAAYC,MAAO,CAACC,MAAM,SAAxC,+BACA,uBAAMF,UAAU,iBAAiBG,GAAG,qBAAqBC,SAAUX,GApCpD,SAACY,GAEVC,QAAQC,IAAIF,GACTA,EAAC,WAAeA,EAAC,kBAEhBC,QAAQC,IAAI,QACZV,EAAS,IACTW,IAAMC,KAAK,8BAA8BJ,GAAGK,MAAK,SAACC,GAC9CL,QAAQC,IAAI,cAAcI,MAE7BC,OAAM,SAACC,GAAOP,QAAQC,IAAI,YAAYM,MAE3CC,SAASC,eAAe,sBAAsBC,UAS1CV,QAAQC,IAAI,YACZV,EAAS,2BAcnB,UAEM,qBAAKG,UAAU,cAAf,SACJ,uBAAOA,UAAU,2BAAiCiB,KAAK,OAAOC,IAAK1B,EAAS,CAAC2B,UAAS,IAAQC,YAAY,OAAOC,KAAK,WAI7G3B,EAAOuB,MAAQ,qBAGjB,qBAAKjB,UAAU,cAAf,SACP,uBAAOA,UAAU,2BAA2BiB,KAAK,QAAQC,IAAK1B,EAAS,CAAC2B,UAAS,IAAQC,YAAY,QAAQC,KAAK,YAEjG3B,EAAO4B,OAAS,sBAEjB,sBAAKtB,UAAU,cAAf,UAChB,uBAAOA,UAAU,2BAA4BuB,SAzB7B,SAAClB,GAErBC,QAAQC,IAAIF,EAAEmB,OAAOC,QAuBsDC,aAAa,GAAGT,KAAK,WAAWC,IAAK1B,EAAS,CAAC2B,UAAS,IAAQC,YAAY,WAAWC,KAAK,SACtJf,QAAQC,IAAI,UAAUT,GACvB,mBAAGG,MAAOH,EAAM,CAAC6B,QAAQ,gBAAgB,CAACA,QAAQ,QAAlD,sCAEHjC,EAAOkC,UAAY,yBAE7B,qBAAK5B,UAAU,cAAf,SACC,uBAAOA,UAAU,2BAA2B0B,aAAa,GAAGH,SAAUxB,EAAQkB,KAAK,WAAWC,IAAK1B,EAAS,CAAC2B,UAAS,IAAQC,YAAY,WAAWC,KAAK,eAEjI3B,EAAOmC,UAAY,wBAC7C,qBAAK7B,UAAU,cAAf,SACC,uBAAOA,UAAU,2BAA2B0B,aAAa,GAAGH,SAAUxB,EAAQkB,KAAK,mBAAmBC,IAAK1B,EAAS,CAAC2B,UAAS,IAAQC,YAAY,mBAAmBC,KAAK,eAGjK3B,EAAOoC,kBAAoB,wBACpC,4BAAIlC,IACL,uBAAOI,UAAU,yBAA2BqB,KAAK,SAASI,MAAM,2BCnFpDM,MANf,WACE,OAAQ,mCACV,cAAC,EAAD,OCMeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAASC,eAAe,SAM1BiB,M","file":"static/js/main.9fc8b505.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\n\nimport './Adduser.css';\nimport { useForm } from 'react-hook-form';\n//import {useHistory} from 'react-router-dom';\nimport axios from 'axios';\n//import Navbar from './Navbar';\nconst Adduser=()=>\n{\n   // console.log(\"addd user:-\",props);\n   \n    const { register, handleSubmit, errors,} = useForm();\n    const[match,setMatch]=useState('');\n    const[error,setError]=useState(false);\n    const[sub,setSub]=useState(true);\n    ///const history=useHistory();\n\n    function change()\n    {\n\n    }\n    \n    \n    \n\n    const submit=(e)=>\n    {\n        console.log(e);\n        if(e[\"password\"]===e[\"confirm_password\"])\n        {\n            console.log(\"same\")\n            setMatch('')\n            axios.post('http://localhost:4000/user/',e).then((res)=>{\n                console.log(\"on submit:-\",res)\n                })\n            .catch((err)=>{console.log(\"add error\",err)})\n\n        document.getElementById(\"create-course-form\").reset();\n        \n    \n    \n                \n                \n        }\n        else\n        {\n            console.log(\"not same\");\n            setMatch(\"pass word not match\")\n        }\n}\n\n\nconst checkUserName=(e)=>\n{\nconsole.log(e.target.value);\n}\n    return(\n        <>\n        <div className=\"wrapper\">\n\t<div className=\"login-box\">\n\t\t<h3 className=\"info-text\" style={{color:\"black\"}}>User Registration</h3>\n\t\t<form className=\"form-container\" id=\"create-course-form\" onSubmit={handleSubmit(submit)}>\n\t\t\t\n        <div className=\"input-addon\">\n\t\t\t\t<input className=\"form-element input-field\"       name=\"name\" ref={register({required:true})} placeholder=\"name\" type=\"text\" />\n                \n             </div>\n\n            {errors.name && ' Name is required.'}\n\n            \n           <div className=\"input-addon\">\n\t\t\t\t<input className=\"form-element input-field\" name=\"email\" ref={register({required:true})} placeholder=\"Email\" type=\"email\" />\n\t\t\t\t\t</div>\n                    {errors.email && ' email is required.'}\n\n                    <div className=\"input-addon\">\n\t\t\t\t<input className=\"form-element input-field\"  onChange={ checkUserName} defaultValue=\"\" name=\"username\" ref={register({required:true})} placeholder=\"username\" type=\"text\" />\n                {console.log(\"error:-\",error)}\n                <p style={error?{display:\"inline-block\"}:{display:'none'}}>username alerdy exist</p>\n             </div>\n            {errors.username && ' userName is required.'}\n\t\t\t\n\t\t\t<div className=\"input-addon\">\n\t\t\t\t<input className=\"form-element input-field\" defaultValue=\"\" onChange={change} name=\"password\" ref={register({required:true})} placeholder=\"Password\" type=\"password\" />\n\t\t\t\t\t\t\t</div>\n                            {errors.password && ' pasword is required.'}\n\t\t\t<div className=\"input-addon\">\n\t\t\t\t<input className=\"form-element input-field\" defaultValue=\"\" onChange={change} name=\"confirm_password\" ref={register({required:true})} placeholder=\"Re-type password\" type=\"password\" />\n\t\t\t\t\n\t\t\t</div>\n            {errors.confirm_password && ' pasword is required.'}\n    <p>{match}</p>\n\t\t\t<input className=\"form-element is-submit\"   type=\"submit\" value=\"Create User\" />\n            \n            \n       </form>\n\t\t\t</div>\n</div>\n</>\n    )\n}\n\nexport default Adduser;","import logo from './logo.svg';\nimport './App.css';\nimport Adduser from './component/Adduser'\n\nfunction App() {\n  return (<>\n<Adduser/>\n  </>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}